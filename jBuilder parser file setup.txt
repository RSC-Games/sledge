jBuilder parser file setup:

Allow -D for specifying parameters
Command line: jbuilder <target> -Duse_lwjgl=true --javac_debug

jbuildfile 
compile {
    # Code goes here.
    PATH = ""  # Variable set
    CLASSPATH = ""  # Provided classpath
    ENTRYPOINT = "Main"  # Code entrypoint
    BINARY = "Velocity.jar"  # Deployment binary.

    # Undefined symbols will by default evaluate to false.
    if ($(USE_LWJGL)) {
        CLASSPATH = ".;lib/common/joml-1.10.5.jar;lib/common/lwjgl-glfw.jar;lib/common/lwjgl.jar;lib/common/lwjgl-opengl.jar;lib/common/lwjgl-stb.jar"
    }

    # jBuilder must be asked to explicitly copy the build dir. Once done, it will automatically execute all ops on the new dir.
    %useoutdir

    if ($(PLATFORM) == "win") {
        # link in lwjgl binaries for windows
        # CLASSPATH := ";some_classpath" # Appends instead of clobbering the value.
    }

    %purge ".class"  # Erase all the stale class files.
    %jcomp $(ARGS) $(CLASSPATH) $(ENTRYPOINT)
    %log "Printing a message: here's the" $(CLASSPATH)

    # Run a provided unit with cmd or a jar
    %jar unit args  # Provided external unit
    @chdir  # Cmd

    # Do linking stuff. Builds the jarfile by default.
    %link $(BINARY) $(CLASSPATH)
    %useldrbin  # Copies the Java launcher into the directory and rename the current binary bin_resources
    %keepreq  # Keep dist code only.
}
clean {
    %purge ".class"
}

Grammar:
<target label> {} A build target. All but the requested target are ignored.
<VARNAME> = <value> Variable definition.
if (<cond>) {} Only executes if the condition values to true or false.
# ... Comment
%cmd Built-in units
@unit.jar External JAR unit to link in and execute
@chdir command line code.

Built-in vars
PLATFORM holds the current platform.
ARCHITECTURE holds the cpu architecture.
CPU_COUNT holds the core count.